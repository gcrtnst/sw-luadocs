head Matrix Manipulation
body Stormworks provides a limited set of matrix functions that are useful for transforming positions of objects in scripts:
.... 
body Multiply two matrices together.
code out_matrix = matrix.multiply(matrix1, matrix2)
body Invert a matrix.
code out_matrix = matrix.invert(matrix1)
body Transpose a matrix.
code out_matrix = matrix.transpose(matrix1)
body Return an identity matrix.
code out_matrix = matrix.identity()
body Return a rotation matrix rotated in the X axis.
code out_matrix = matrix.rotationX(radians)
body Return a rotation matrix rotated in the Y axis.
code out_matrix = matrix.rotationY(radians)
body Return a rotation matrix rotated in the Z axis.
code out_matrix = matrix.rotationZ(radians)
body Return a translation matrix translated by x,y,z.
code out_matrix = matrix.translation(x,y,z)
body Get the x,y,z position from a matrix.
code x,y,z = matrix.position(matrix1)
body Find the distance between two matrices.
code dist = matrix.distance(matrix1, matrix2)
body Multiplies a matrix by a vec 4.
code out_x, out_y, out_z, out_w = matrix.multiplyXYZW(matrix1, x, y, z, w)
body Returns the rotation required to face an X Z vector
code out_rotation = matrix.rotationToFaceXZ(x, z)
head Example
body Most API functions take a matrix as a parameter so users that do not wish to use matrices directly can convert between matrices and coordinates as follows:
code 
.... -- Teleport peer_1 10m up
.... peer_1_pos, is_success = server.getPlayerPos(1)
.... if is_success then
.... 	local x, y, z = matrix.position(peer_1_pos)
.... 	y = y + 10
.... 	server.setPlayerPos(1, matrix.translation(x,y,z))
.... end
.... 
